import requests
import streamlit as st
import json

# Streamlit UI
st.title("üé• AI Quiz Maker")
st.markdown("Enter a YouTube link below and get a quiz generated by AI!")

# Initialize session state variables
if "quiz_generated" not in st.session_state:
    st.session_state.quiz_generated = False

if "quiz_data" not in st.session_state:
    st.session_state.quiz_data = []

# User input
youtube_url = st.text_input("YouTube Video URL")

# Generate quiz button
if st.button("Generate Quiz"):
    if youtube_url:
        with st.spinner("Processing..."):
            try:
                response = requests.get(
                    "http://localhost:8000/generate-quiz/",
                    params={"url": youtube_url},
                    timeout=120
                )

                if response.status_code == 200:
                    quiz = response.json().get("quiz", [])
                    if quiz:
                        st.session_state.quiz_data = json.loads(quiz)  # Assuming the backend returns a Python list, not a JSON string
                        st.session_state.quiz_generated = True
                        st.success("Quiz generated successfully!")
                    else:
                        st.warning("No quiz data returned from backend.")
                else:
                    st.error(f"Backend error: {response.status_code}")
                    st.text(response.text)
            except requests.exceptions.RequestException as e:
                st.error(f"Request failed: {e}")
    else:
        st.warning("Please enter a valid YouTube URL.")

# Display quiz if available
if st.session_state.quiz_generated:
    data = st.session_state.quiz_data
    if not data:
        st.warning("No quiz data found.")
    else:
        for idx, q in enumerate(data):
            st.markdown(f"### Question {idx + 1}")
            
            if q["type"] == "true-false":
                answer = st.radio(
                    q["question"],
                    ["True", "False"],
                    key=f"tf_{idx}",
                    index=None,
                )
                if answer:
                    st.write(f"**Your Answer:** {answer}")
                    if answer == q["answer"]:
                        st.success("‚úÖ Correct!")
                    else:
                        st.error("‚ùå Incorrect.")
                        st.info(f"**Correct Answer:** {q['answer']}")
                    st.write(f"**Explanation:** {q['explanation']}")

            elif q["type"] == "mcq":
                answer = st.radio(
                    q["question"],
                    q["options"],
                    key=f"mcq_{idx}",
                    index=None,
                )
                if answer:
                    st.write(f"**Your Answer:** {answer}")
                    if answer[0] == q["answer"]:
                        st.success("‚úÖ Correct!")
                    else:
                        st.error("‚ùå Incorrect.")
                        st.write(f"**Correct Answer:** {q['answer']}")
                    st.write(f"**Explanation:** {q['explanation']}")

            st.markdown("---")